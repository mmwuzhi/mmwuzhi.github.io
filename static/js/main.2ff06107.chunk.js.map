{"version":3,"sources":["CommentInput.js","Comment.js","CommentList.js","CommentApp.js","index.js"],"names":["CommentInput","state","username","content","event","this","setState","target","value","props","onSubmit","className","onChange","handleUsernameChange","bind","handleContentChange","onClick","handleSubmit","Component","Comment","comment","CommentList","comments","map","key","id","defaultProps","CommentApp","alert","push","handleSubmitComment","ReactDOM","render","document","getElementById"],"mappings":"6MA2DeA,E,kDAxDb,aAAe,IAAD,8BACZ,gBACKC,MAAQ,CACXC,SAAU,GACVC,QAAS,IAJC,E,iEAQOC,GACnBC,KAAKC,SAAS,CACZJ,SAAUE,EAAMG,OAAOC,U,0CAIPJ,GAClBC,KAAKC,SAAS,CACZH,QAASC,EAAMG,OAAOC,U,qCAKxB,GAAGH,KAAKI,MAAMC,SAAU,CAAC,IAAD,EACML,KAAKJ,MAA1BC,EADe,EACfA,SAAUC,EADK,EACLA,QACjBE,KAAKI,MAAMC,SAAS,CAACR,WAAUC,YAEjCE,KAAKC,SAAS,CAACH,QAAS,O,+BAIxB,OACE,yBAAKQ,UAAU,iBACb,yBAAKA,UAAU,iBACb,0BAAMA,UAAU,sBAAhB,kCACA,yBAAKA,UAAU,uBACb,2BAAOH,MAAOH,KAAKJ,MAAMC,SACzBU,SAAUP,KAAKQ,qBAAqBC,KAAKT,UAG7C,yBAAKM,UAAU,iBACb,0BAAMA,UAAU,sBAAhB,kCACA,yBAAKA,UAAU,uBACb,8BAAUH,MAAOH,KAAKJ,MAAME,QAC5BS,SAAUP,KAAKU,oBAAoBD,KAAKT,UAG5C,yBAAKM,UAAU,wBACb,4BAAQK,QAASX,KAAKY,aAAaH,KAAKT,OAAxC,sB,GA/CiBa,aCaZC,E,uKAXX,OACE,yBAAKR,UAAU,WACb,yBAAKA,UAAU,gBACb,8BAAON,KAAKI,MAAMW,QAAQlB,UAD5B,UAGA,2BAAIG,KAAKI,MAAMW,QAAQjB,c,GAPTe,aCChBG,E,uKAKF,OACE,6BACGhB,KAAKI,MAAMa,SAASC,KAAI,SAACH,GAAD,OAAa,kBAAC,EAAD,CAASA,QAASA,EAASI,IAAKJ,EAAQK,a,GAP5DP,aAApBG,EACGK,aAAe,CACpBJ,SAAU,IAWCD,QCuBAM,E,kDAlCb,aAAe,IAAD,8BACZ,gBACK1B,MAAQ,CACXqB,SAAU,IAHA,E,gEAOMF,GAClB,GAAIA,EAAJ,CACA,IAAIA,EAAQlB,SAAU,OAAO0B,MAAM,wFACnC,IAAIR,EAAQjB,QAAS,OAAOyB,MAAM,wFAClCvB,KAAKJ,MAAMqB,SAASO,KAAKT,GACzBf,KAAKC,SAAS,CACZgB,SAAUjB,KAAKJ,MAAMqB,c,+BAKvB,OACE,yBAAKX,UAAU,WAQb,kBAAC,EAAD,CAAcD,SAAUL,KAAKyB,oBAAoBhB,KAAKT,QACtD,kBAAC,EAAD,CAAaiB,SAAUjB,KAAKJ,MAAMqB,gB,GA7BjBJ,a,MCCzBa,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.2ff06107.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\n\r\nclass CommentInput extends Component {\r\n  constructor() {\r\n    super()\r\n    this.state = {\r\n      username: '',\r\n      content: ''\r\n    }\r\n  }\r\n\r\n  handleUsernameChange(event) {\r\n    this.setState({\r\n      username: event.target.value\r\n    })\r\n  }\r\n\r\n  handleContentChange(event) {\r\n    this.setState({\r\n      content: event.target.value\r\n    })\r\n  }\r\n\r\n  handleSubmit() {\r\n    if(this.props.onSubmit) {\r\n      const {username, content} = this.state\r\n      this.props.onSubmit({username, content})\r\n    }\r\n    this.setState({content: ''})\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className='comment-input'>\r\n        <div className='comment-field'>\r\n          <span className='comment-field-name'>ユーザ名：</span>\r\n          <div className='comment-field-input'>\r\n            <input value={this.state.username}\r\n            onChange={this.handleUsernameChange.bind(this)} />\r\n          </div>\r\n        </div>\r\n        <div className='comment-field'>\r\n          <span className='comment-field-name'>コメント：</span>\r\n          <div className='comment-field-input'>\r\n            <textarea value={this.state.content}\r\n            onChange={this.handleContentChange.bind(this)} />\r\n          </div>\r\n        </div>\r\n        <div className='comment-field-button'>\r\n          <button onClick={this.handleSubmit.bind(this)}>\r\n            投稿\r\n          </button>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n\r\nexport default CommentInput","import React, { Component } from 'react'\r\n\r\nclass Comment extends Component {\r\n  render() {\r\n    return (\r\n      <div className='comment'>\r\n        <div className='comment-user'>\r\n          <span>{this.props.comment.username}</span>：\r\n        </div>\r\n        <p>{this.props.comment.content}</p>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Comment","import React, { Component } from 'react'\r\nimport Comment from './Comment'\r\n\r\nclass CommentList extends Component {\r\n  static defaultProps = {\r\n    comments: []\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        {this.props.comments.map((comment) => <Comment comment={comment} key={comment.id} />)}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default CommentList","import React, { Component } from 'react'\r\nimport CommentInput from './CommentInput'\r\nimport CommentList from './CommentList'\r\n\r\nclass CommentApp extends Component {\r\n  constructor() {\r\n    super()\r\n    this.state = {\r\n      comments: []\r\n    }\r\n  }\r\n\r\n  handleSubmitComment(comment) {\r\n    if(!comment) return\r\n    if(!comment.username) return alert('ユーザ名を入力してください！')\r\n    if(!comment.content) return alert('コメントを入力してください！')\r\n    this.state.comments.push(comment)\r\n    this.setState({\r\n      comments: this.state.comments\r\n    })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className='wrapper'>\r\n        {\r\n        // 这里的onSubmit就相当于 this.handleSubmitComment({username, content})\r\n        // 过程:\r\n        // ・button onClick={this.handleSubmit.bind(this)} 调用handleSubmit\r\n        // ・handleSubmit判断onSubmit是否存在 因为存在 所以onSubmit() = onSubmit(CommentInput.state({username, content}))\r\n        // ・所以 onSubmit() = this.handleSubmitComment({username, content})\r\n        }\r\n        <CommentInput onSubmit={this.handleSubmitComment.bind(this)} />\r\n        <CommentList comments={this.state.comments} />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default CommentApp","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport CommentApp from './CommentApp'\nimport './index.css'\n\nReactDOM.render(\n  <CommentApp />,\n  document.getElementById('root')\n)"],"sourceRoot":""}